package com.assignment.player;

import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.rmi.RemoteException;

public abstract class Database {
	public String basePath = "C:\\Myserver\\";

	public Boolean createPlayer(String username, String firstName, String lastName, Integer age, String password,
			String IpAddress) throws Exception {
		try {
			String data = "\n"+username + "|" + firstName + "|" + lastName + "|" + age + "|" + password + "|" + IpAddress;
			String ip = IpAddress.split("\\.")[0];
			String path = this.basePath + ip+".txt";
			System.out.println(ip);
			switch (ip) {
			case "93": {
				return this.writeFile(path, data);
			}
			case "132": {
				return this.writeFile(path, data);
			}
			case "182": {
				return this.writeFile(path, data);
			}
			default: {
				throw new RuntimeException("Invalid IP address");
			}
			}

		} catch (Exception e) {

		}
		return false;
	}
	
	public Boolean signIn(String username, String password, String IpAddress, String status) throws Exception {
		
		try {
			String data = "\n" + username + "|" + password + "|" + IpAddress;
			String ip = IpAddress.split("\\.")[0];
			if (username.matches(data) && password.matches(data)) {	
				
				status.equals("Online");							
			} else {
				
				status.equals("Offline");
				
			} 
				
			}catch (Exception e) {
		
	}
		return falsr;
	}

	private Boolean writeFile(String path, String data) {
		try {
			Files.write(Paths.get(path), data.getBytes(), StandardOpenOption.APPEND);
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}
	
	

}
